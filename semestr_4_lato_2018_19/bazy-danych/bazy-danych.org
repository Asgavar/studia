#+STARTUP: showall

* ACID
** Atomic
** Consistent
** Independent/Isolated
** Durable

* [[http://avid.cs.umass.edu/courses/691LL/f2006/papers/SH05.pdf][What Goes Around Comes Around]]

* Algebra Relacji
** Operacje Unarne
*** Rzut
    π_nazwisko(Student) -> tylko kolumna z nazwiskami z tabeli Student
*** Selekcja
   σ_Adres='Koszalin'(Student) -> krotki ze studentami z Koszalina
*** Przemianowanie
   ρ_Osoba(id, nazwisko, miasto)(π_indeks,nazwisko,adres(Student)) -> zmiana nazwy relacji i atrybutów
** Operacje Teoriomnogościowe
*** Suma/Różnica/Przekrój
    Dokładnie tak samo jak w reszcie świata
*** Iloczyn Kartezjański
    Też, wszystko ze wszystkim
*** Złączenie naturalne ><
    Zmatchowanie na podstawie kolumn (atrybutów) o tych samych nazwach
*** Złączenie i selekcja w jednym
    R ><_F S = σ_F (R × S)

* Języki do działania na relacjach
** Święta Trójca
   - algebra relacji - imperatywny i to paskudnie
   - relacyjny rachunek dziedzin - deklaratywny
   - relacyjny rachunek krotek - j.w.
   - *Twierdzenie Codda* mówi, że ich siła wyrazu jest równoważna
** Problemy z językami
   - ewaluacja zapytań
     - generalnie dość złożone
     - *|I|* - rozmiar bazy
     - *|φ|* - liczba zmiennych w zapytaniu
     - /combined complexity/, czyli legitna złożoność to *O(|I|^|φ|)*
     - ...ale czemu by nie oszukać i nie stwierdzić, że zmiennych
       w zapytaniu najczęściej jest bardzo mało i usztywnić |φ| jako stałą?
       TADAM właśnie otrzymaliśmy złożoność wielomianową
   - równoważność 2 zapytań
     - trudne, nawet bardzo
   - odpowiedź na pytanie: 'czy 1 z zapytań /zawiera się/ w drugim?
     - nie mniej trudne niż równoważność -> bo gdybyśmy umieli
       rozwiązywać ten problem, to równoważność byłaby po prostu złożeniem
       czy X zawiera się w Y i vice versa
** Faktyczne języki
   - Logika 1. rzędu
   - Conjunctive Queries
     - równoważne z /podzbiorem/ algebry relacji - selekcją, projekcją i iloczynem kartezjańskim
     - bardzo pomocne w *Data/Information Integration*
     - /boolowskie CQ/
       - ~Q() :- E(x, z1), E(z1, x)~
     - *I^Q* - tzw kanoniczna baza dla zapytania Q
   - Datalog
     - taki Prolog, ale bez rekursji więc dużo prostszy
