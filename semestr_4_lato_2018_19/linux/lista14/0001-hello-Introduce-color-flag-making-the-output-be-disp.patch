From 9b3257a22ba6cee097d96ab2ba41e8b95f11fedc Mon Sep 17 00:00:00 2001
From: Artur Juraszek <artur@juraszek.xyz>
Date: Sun, 2 Jun 2019 22:00:09 +0200
Subject: [PATCH] hello: Introduce '--color' flag making the output be
 displayed in red

---
 doc/hello.texi |  6 ++++++
 src/hello.c    | 16 +++++++++++++---
 2 files changed, 19 insertions(+), 3 deletions(-)

diff --git a/doc/hello.texi b/doc/hello.texi
index a631f0b..6e981d0 100644
--- a/doc/hello.texi
+++ b/doc/hello.texi
@@ -256,6 +256,12 @@ be mentioned (Hello doesn't have any).
 @cindex modern
 Output the traditional greeting message @samp{hello, world}.
 
+@item --color
+@itemx -c
+@opindex --color
+@opindex -c
+Display the given message in a beatiful shade of red.
+
 @item --version
 @itemx -v
 @opindex --version
diff --git a/src/hello.c b/src/hello.c
index 2e7d38e..777c45b 100644
--- a/src/hello.c
+++ b/src/hello.c
@@ -18,6 +18,7 @@
 #include <config.h>
 
 #include <getopt.h>
+#include <stdbool.h>
 #include <stdnoreturn.h>
 #include <wchar.h>
 
@@ -61,6 +62,7 @@ print_help (FILE *restrict out)
      no-wrap */
   fputs (_("  -t, --traditional       use traditional greeting\n"), out);
   fputs (_("  -g, --greeting=TEXT     use TEXT as the greeting message\n"), out);
+  fputs (_("  -c, --color             use a beatiful shade of red to colorize the greeting\n"), out);
   fputs ("\n", out);
   fputs (_("      --help     display this help and exit\n"), out);
   fputs (_("      --version  output version information and exit\n"), out);
@@ -80,7 +82,7 @@ print_help (FILE *restrict out)
 }
 
 static void
-parse_options (int argc, char *argv[], const char **greeting_msg)
+parse_options (int argc, char *argv[], const char **greeting_msg, bool* do_we_want_to_colorize)
 {
   int optc;
   int lose = 0;
@@ -91,12 +93,13 @@ parse_options (int argc, char *argv[], const char **greeting_msg)
   static const struct option longopts[] = {
     {"greeting", required_argument, NULL, 'g'},
     {"traditional", no_argument, NULL, 't'},
+    {"color", no_argument, NULL, 'c'},
     {"help", no_argument, NULL, OPT_HELP},
     {"version", no_argument, NULL, OPT_VERSION},
     {NULL, 0, NULL, 0}
   };
 
-  while ((optc = getopt_long (argc, argv, "g:t", longopts, NULL)) != -1)
+  while ((optc = getopt_long (argc, argv, "g:tc", longopts, NULL)) != -1)
     switch (optc)
       {
 	/* --help and --version exit immediately, per GNU coding standards.  */
@@ -111,6 +114,9 @@ parse_options (int argc, char *argv[], const char **greeting_msg)
       case 't':
 	*greeting_msg = _("hello, world");
 	break;
+      case 'c':
+  *do_we_want_to_colorize = true;
+  break;
       default:
 	lose = 1;
 	break;
@@ -133,6 +139,7 @@ main (int argc, char *argv[])
   wchar_t *mb_greeting;
   mbstate_t mbstate = { 0, };
   size_t len;
+  bool do_we_want_to_colorize = false;
 
   set_program_name (argv[0]);
 
@@ -154,7 +161,7 @@ main (int argc, char *argv[])
      This is implemented in the Gnulib module "closeout".  */
   atexit (close_stdout);
 
-  parse_options(argc, argv, &greeting_msg);
+  parse_options(argc, argv, &greeting_msg, &do_we_want_to_colorize);
 
   len = strlen(greeting_msg) + 1;
   mb_greeting = xmalloc(len * sizeof(wchar_t));
@@ -163,7 +170,10 @@ main (int argc, char *argv[])
     error (EXIT_FAILURE, errno, _("conversion to a multibyte string failed"));
 
   /* Print greeting message and exit. */
+  if(do_we_want_to_colorize) wprintf (L"\033[1;31m");
   wprintf (L"%ls\n", mb_greeting);
+  if (do_we_want_to_colorize) wprintf (L"\033[0m");
+
   free(mb_greeting);
 
   exit (EXIT_SUCCESS);
-- 
2.21.0

